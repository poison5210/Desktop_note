# 桌面便签应用原型开发文档

## 1. 概述

本项目是一个桌面便签应用的 HTML 原型，旨在展示一个轻量、现代化的便签工具 UI 和交互功能，适用于 Electron 等桌面应用框架。原型使用 HTML、CSS（Tailwind CSS）、JavaScript 开发，支持便签的增删改查、背景/字体颜色调整、透明度控制、显示/隐藏、置顶切换等功能，注重美观性和用户体验。

- **版本**：1.0
- **日期**：2025年8月27日
- **原型文件**：`sticky_note_prototype_updated.html`

## 2. 功能描述

### 2.1 便签管理
- **添加便签**：
  - 用户在输入框（`#new-note`）输入内容，按回车键（Enter）添加新便签。
  - 新便签以未完成状态（空心圆圈）加入列表，清空输入框后刷新。
- **修改便签**：
  - 点击便签文本（`<input class="note-text">`）直接编辑，实时更新数据。
  - 点击圆圈（`.circle`）切换完成/未完成状态（完成时圆圈填充并文本划线）。
- **删除便签**：
  - 每行便签右侧有删除按钮（`✕`），点击移除便签并刷新列表。

### 2.2 外观调整
- **透明度**：
  - 通过设置弹框中的滑条（`#opacity-slider`）调整便签容器和弹框的透明度（范围 0-1，步长 0.1，默认 0.9）。
  - 透明度为 0 时，背景完全透明，仅显示文本、圆圈和边框。
- **背景颜色**：
  - 通过设置弹框中的颜色选择器（`#bg-color-picker`）调整便签容器和弹框背景颜色（默认 `#fffac8`，淡黄色）。
- **字体颜色**：
  - 通过设置弹框中的颜色选择器（`#text-color-picker`）调整便签文本和输入框字体颜色（默认 `#333333`，深灰色；划线文本固定为 `#666`）。

### 2.3 交互控制
- **设置弹框**：
  - 点击右上角设置图标（`⚙`）显示/隐藏弹框，包含透明度滑条、背景颜色和字体颜色选择器。
  - 弹框背景与便签容器同步（动态 `rgba`）。
- **显示/隐藏**：
  - 点击眼睛图标（`◉/⦸`）切换内容区域（`#content-area`）的显示/隐藏状态。
  - 隐藏时内容区域透明（`opacity: 0`），仅显示标题栏和图标。
- **置顶/取消置顶**：
  - 点击置顶图标（`📌/📍`）切换置顶状态（静态展示，实际置顶需 Electron 实现）。
- **关闭**：
  - 点击关闭图标（`✕`）模拟关闭窗口（静态展示，Electron 需实现窗口关闭）。

### 2.4 窗口调整
- 支持通过拖拽右下角调整窗口大小（CSS `resize: both`）。

## 3. 技术实现

### 3.1 文件结构
- **文件**：`sticky_note_prototype_updated.html`
- **依赖**：
  - Tailwind CSS（CDN）：`https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css`
  - 无其他外部依赖，纯 HTML/CSS/JavaScript 实现。

### 3.2 HTML 结构
- **根容器**：`<div id="note-container" class="note-container">`
  - 包含标题栏、设置弹框、内容区域（便签列表和输入框）。
- **标题栏**：`<div class="flex justify-between items-center p-2">`
  - 左侧：便签标题（“便签”）。
  - 右侧：设置（`⚙`）、显示/隐藏（`◉/⦸`）、置顶（`📌/📍`）、关闭（`✕`）图标。
- **设置弹框**：`<div id="settings-panel" class="settings-panel">`
  - 包含透明度滑条、背景颜色选择器、字体颜色选择器。
- **内容区域**：`<div id="content-area" class="content-area">`
  - 便签列表（`#note-list`）：动态生成的 `<div class="note-item">`，每行包含圆圈、文本输入框、删除按钮。
  - 输入框（`#new-note`）：用于添加新便签。

### 3.3 CSS 样式
- **布局**：
  - 窗口：`280px × 320px`，`resize: both`，圆润边角（`12px`），阴影（`0 4px 12px rgba(0, 0, 0, 0.15)`）。
  - 标题栏：`flex` 布局，图标间距 `8px`。
  - 便签项：`flex` 布局，圆圈（`14px`）、文本（`14px`）、删除按钮（`14px`）。
  - 设置弹框：`position: absolute`，定位于标题栏下方右侧，背景与容器同步。
- **配色**：
  - 背景：默认淡黄色 `rgba(255, 250, 200, 0.9)`。
  - 字体：默认深灰色 `#333333`，划线文本 `#666`。
  - 图标/按钮：黑色 `#333`，悬浮深灰色 `#555`；关闭按钮悬浮背景 `#e5e5e5`。
- **动画**：
  - 图标/按钮：悬浮放大 1.2 倍（`transform: scale(1.2)`），颜色过渡（`transition: color 0.2s`）。
  - 内容区域：显示/隐藏淡入淡出（`transition: opacity 0.3s`）。
- **字体**：系统字体栈（`-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif`）。

### 3.4 JavaScript 逻辑
- **数据管理**：
  - `notes` 数组存储便签数据：`[{ text: string, completed: boolean }]`。
  - `renderNotes()`：动态渲染便签列表，绑定圆圈点击（切换状态）、文本输入（修改）、删除按钮（移除）事件。
- **外观控制**：
  - `currentBgColor`：存储 RGB 值（默认 `{ r: 255, g: 250, b: 200 }`）。
  - `currentTextColor`：存储 RGB 值（默认 `{ r: 51, g: 51, b: 51 }`）。
  - `currentOpacity`：存储透明度（默认 `0.9`）。
  - `updateBackground()`：更新容器和弹框背景（`rgba`）。
  - `updateTextColor()`：更新文本和输入框字体颜色。
- **交互控制**：
  - 设置弹框：`settingsBtn` 点击切换 `settings-panel` 的 `active` 类。
  - 显示/隐藏：`visibilityBtn` 点击切换 `content-area` 的 `hidden` 类和图标（`◉/⦸`）。
  - 置顶：`pinBtn` 点击切换 `isPinned` 和图标（`📌/📍`）。
  - 添加便签：`new-note` 监听 `keypress`，Enter 键触发添加。
- **事件绑定**：
  - 透明度：`opacitySlider` 的 `input` 事件更新 `currentOpacity`。
  - 背景颜色：`bgColorPicker` 的 `input` 事件解析 HEX 转为 RGB。
  - 字体颜色：`textColorPicker` 的 `input` 事件更新 `currentTextColor`。

## 4. 使用说明

1. **运行环境**：
   - 浏览器：Chrome、Firefox 等现代浏览器。
   - 保存文件为 `sticky_note_prototype_updated.html`，通过浏览器打开。
2. **操作指南**：
   - **添加便签**：在输入框输入内容，按回车。
   - **修改便签**：点击文本编辑，或点击圆圈切换完成状态。
   - **删除便签**：点击右侧“✕”。
   - **设置外观**：点击“⚙”打开弹框，调整透明度、背景颜色、字体颜色。
   - **显示/隐藏**：点击“◉”隐藏内容区域（变“⦸”），再次点击显示。
   - **置顶**：点击“📍”切换置顶（变“📌”）。
   - **关闭**：点击“✕”模拟关闭。
   - **调整窗口**：拖动右下角调整大小。
3. **注意事项**：
   - 置顶功能为静态展示，需 Electron 实现 `setAlwaysOnTop`。
   - 数据存储在内存中，刷新页面会丢失（Electron 需用 JSON 文件持久化）.

## 5. 未来扩展建议

1. **Electron 集成**：
   - 使用 Electron 框架实现无边框窗口。
   - 实现置顶功能（`BrowserWindow.setAlwaysOnTop`）。
   - 通过 `fs` 模块将 `notes` 保存到 JSON 文件，实现数据持久化。
   - 添加窗口关闭逻辑（`window.close`）。
2. **功能增强**：
   - **批量操作**：支持多选删除或标记完成。
   - **删除确认**：删除前弹出确认提示。
   - **拖拽排序**：支持便签项拖拽重新排序。
   - **时间戳**：为便签添加创建/修改时间。
3. **UI 优化**：
   - 添加主题切换（暗色/亮色模式）。
   - 支持自定义字体或更多颜色选项。
   - 优化弹框动画（如滑入滑出）。
4. **性能优化**：
   - 优化 `renderNotes` 性能，减少 DOM 操作（使用虚拟 DOM 或局部更新）。
   - 压缩 Tailwind CSS 或使用本地文件减少 CDN 依赖。

## 6. 技术约束

- **浏览器兼容性**：原型在现代浏览器（Chrome、Firefox、Edge）测试通过，IE 不支持。
- **透明度限制**：透明度为 0 时，文本和图标仍可见，需确保字体颜色可读。
- **置顶功能**：当前为静态切换，需 Electron 环境实现实际置顶。
- **数据存储**：内存存储，需 Electron 的 `fs` 模块实现持久化。

## 7. 总结

本原型实现了一个功能完善、UI 美观的桌面便签应用，具备便签管理（增删改查）、外观调整（透明度、背景/字体颜色）、交互控制（显示/隐藏、置顶）和窗口调整功能。简约黑白图标、圆润关闭按钮、统一背景色的设置弹框提升了视觉一致性。代码结构清晰，交互逻辑完整，可作为 Electron 应用的 UI 原型直接移植。

如需进一步调整（如添加新功能、优化样式、集成 Electron），请提供具体需求！